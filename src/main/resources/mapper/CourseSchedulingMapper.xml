<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jvav.timetable.module.coursescheduling.dao.CourseSchedulingMapper">

    <sql id="column">
               cs.id, cs.classroom_id classroomId, classroom.name classroomName,
               cs.course_id courseId, course.name courseName, course.duration, course.background_color backgroundColor,
               cs.teacher_id teacherId, teacher.name teacherName,
               cs.date, cs.attend_time attendTime, cs.finish_time finishTime,
                cs.remarks remarks, cs.username username

    </sql>

    <select id="selectCourseSchedulingList" resultType="CourseSchedulingListVO">
        select
        <include refid="column"></include>
        from courseScheduling cs
        left join classroom classroom on cs.classroom_id = classroom.id
        left join course course on cs.course_id = course.id
        left join teacher teacher on cs.teacher_id = teacher.id
        where 1=1
        <if test="ew.sqlSegment != ''">
            and ${ew.sqlSegment}
        </if>
    </select>

    <select id="selectCourseSchedulingById" resultType="CourseSchedulingListVO">
        select
        <include refid="column"></include>
        from courseScheduling cs
        left join classroom classroom on cs.classroom_id = classroom.id
        left join course course on cs.course_id = course.id
        left join teacher teacher on cs.teacher_id = teacher.id
        where cs.id = #{id}
    </select>

    <select id="selectCourseSchedulingCourseCount" resultType="map">
        select date, count(id) count
        from courseScheduling
        where 1=1
        <if test="ew.sqlSegment != ''">
            and ${ew.sqlSegment}
        </if>
    </select>

    <select id="selectTimePeriodByDateRange" resultType="string">
        select concat(date_format(attend_time, '%H:%i'), '-', date_format(finish_time, '%H:%i')) time
        from courseScheduling
        where date in
        <foreach item="item" collection="dateList" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="classroomId != null">
            and classroom_id = #{classroomId}
        </if>
        group by time
        order by time
    </select>

    <select id="selectByDateRange" resultType="CourseSchedulingExportVO">
        select date,
               concat(date_format(cs.attend_time, '%H:%i'), '-', date_format(cs.finish_time, '%H:%i')) time,
               classroom.name classroomName,
               course.name courseName, course.background_color backgroundColor,
               teacher.name teacherName
        from courseScheduling cs
                 left join classroom classroom on cs.classroom_id = classroom.id
                 left join course course on cs.course_id = course.id
                 left join teacher teacher on cs.teacher_id = teacher.id
        where date between #{startDate} and #{endDate}
        <if test="classroomId != null">
            and cs.classroom_id = #{classroomId}
        </if>
        order by date, time
    </select>

    <select id="selectReportTeacherCount" resultType="CourseSchedulingReportVO">
        select teacher.id, teacher.name, count(cs.id) count
        from teacher teacher
        left join courseScheduling cs on teacher.id = cs.teacher_id
            and cs.date between #{startDate} and #{endDate}
        group by teacher.id, teacher.name
        order by count desc;
    </select>

    <select id="selectReportCourseCount" resultType="CourseSchedulingReportVO">
        select course.id, course.name, course.background_color color, count(cs.id) count
        from course course
        left join courseScheduling cs on course.id = cs.course_id
            and cs.date between #{startDate} and #{endDate}
        group by course.id, course.name
        order by count desc;
    </select>

    <insert id="insertCourseScheduling" parameterType="com.jvav.timetable.module.coursescheduling.model.data.CourseSchedulingDO">
        INSERT INTO courseScheduling (
        classroom_id,
        course_id,
        teacher_id,
        date,
        attend_time,
        finish_time,
        remarks
        ) VALUES (
        #{classroomId},
        #{courseId},
        #{teacherId},
        #{date},
        #{attendTime},
        #{finishTime},
        #{remarks}
        )
    </insert>


    <update id="updateCourseScheduling" parameterType="com.jvav.timetable.module.coursescheduling.model.data.CourseSchedulingDO">
        UPDATE courseScheduling
        SET classroom_id = #{classroomId},
        course_id = #{courseId},
        teacher_id = #{teacherId},
        date = #{date},
        attend_time = #{attendTime},
        finish_time = #{finishTime},
        remarks = #{remarks}
        WHERE id = #{id}
    </update>

</mapper>
